openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: user
    description: UserAPI
paths:
  /api:
    post:
      tags:
        - user
      summary: Add new user
      description: Add new user with Name, Email (Unique), Phone value
      operationId: addUser
      requestBody:
        description: Add new user to DB
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nguyen tien phat
                email:
                  type: string
                  example: phat@gmail.com
                age:
                  type: number
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                  email:
                    type: string
                  age:
                    type: number
        '500':
            description: Internal server error
    get:
      tags:
        - user
      summary: Retrieve all users
      description: Retrieves a list of all users in the system
      operationId: getAllUsers
      responses:
        '200':
          description: Show all user success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                  email:
                    type: string
                  age:
                    type: number
        '500':
            description: Internal server error
  /api/{id}:
    put:
      tags:
        - user
      summary: Add new user
      description: Add new user with Name, Email (Unique), Phone value
      operationId: editUser
      requestBody:
        description: Edit user based on user ID
        content:
          application/json:
            schema:
              type: string
              properties:
                id:
                  type: string
                  example: "Nguyen tien phat"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                  email:
                    type: string
                  age:
                    type: number
        '500':
            description: Internal server error
    delete:
      tags:
        - user
      summary: Delete user
      description: delete user
      operationId: deleteUser
      requestBody:
        description: delete user
        content:
          application/json:
            schema:
              type: string
              properties:
                id:
                  type: string
                  example: Nguyen tien phat
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                  email:
                    type: string
                  age:
                    type: number
        '500':
            description: Internal server error




      
        
               

